from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from bot.states.states import GPTState
from bot.services.chatgpt_client import ask_chatgpt
from bot.keyboards.inline import gpt_style_keyboard

router = Router()

STYLE_PROMPTS = {
    "short": "–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.",
    "deep": "–û–±—ä—è—Å–Ω–∏ –ø–æ–¥—Ä–æ–±–Ω–æ, —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.",
    "funny": "–û—Ç–≤–µ—á–∞–π —Å —é–º–æ—Ä–æ–º –∏ –∏–≥—Ä–∏–≤–æ.",
    "think": "–û—Ç–≤–µ—á–∞–π —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏, —Å —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è–º–∏."
}

@router.message(Command("gpt"))
async def handle_gpt_command(message: Message, state: FSMContext):
    await state.set_state(GPTState.choosing_style)
    await message.answer("üí¨ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞:", reply_markup=gpt_style_keyboard())

@router.callback_query(F.data.startswith("style_"))
async def handle_style_choice(callback: CallbackQuery, state: FSMContext):
    style = callback.data.split("_")[1]
    await state.update_data(style=style)
    await state.set_state(GPTState.waiting_for_input)
    await callback.message.answer("‚úçÔ∏è –ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–≤–µ—á—É –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ.")
    await callback.answer()

@router.message(GPTState.waiting_for_input)
async def handle_gpt_query(message: Message, state: FSMContext):
    data = await state.get_data()
    style = data.get("style", "short")
    prompt = f"{STYLE_PROMPTS[style]}\n–í–æ–ø—Ä–æ—Å: {message.text}"
    response = await ask_chatgpt(prompt)
    await message.answer(f"<b>–û—Ç–≤–µ—Ç ({style}):</b>\n{response}")
    await state.clear()

def register(dp):
    dp.include_router(router)